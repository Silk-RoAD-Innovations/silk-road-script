name: Build and Draft Release

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install packages for Windows
        if: runner.os == 'Windows'
        run: pip install -r requirements-windows.txt -r requirements.txt

      - name: Install packages for Mac/Linux
        if: runner.os != 'Windows'
        run: pip install -r requirements.txt

      - name: Build executables
        run: |
          pyinstaller launch.py --name myapp --icon logo.ico
          mv dist myapp

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp
          path: myapp
  draft_release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      draft_release_id: ${{ steps.create_draft_release.outputs.draft_release_id }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: myapp

      - name: Create draft release
        id: create_draft_release
        run: |
          draft_release_id=$(curl \
            -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --data '{"tag_name":"v'${{ github.ref }}'","name":"Release '${{ github.ref }}'","draft":true}' \
            "https://api.github.com/repos/${{ github.repository }}/releases" | jq -r .id)
          echo "::set-output name=draft_release_id::$draft_release_id"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables
        uses: actions/upload-release-asset@v1
        with:
          upload_url: "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.DRAFT_RELEASE_ID }}/assets?name=myapp-${{ matrix.os }}"
          asset_path: myapp/myapp
          asset_name: myapp-${{ matrix.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

