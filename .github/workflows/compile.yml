name: Build and Draft Release

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install packages for Windows
        if: runner.os == 'Windows'
        run: pip install -r requirements-windows.txt -r requirements.txt

      - name: Install packages for Mac/Linux
        if: runner.os != 'Windows'
        run: pip install -r requirements.txt

      - name: Build executables
        run: |
          pyinstaller launch.py --name myapp --icon logo.ico
          mv dist myapp

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp
          path: myapp

  draft_release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: myapp

      - name: Create draft release
        id: create_release
        run: |
          response=$(curl -s -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d '{"tag_name": "'"${{ github.ref }}"'", "name": "'"Release ${{ github.ref }} Draft"'", "draft": true}')
          release_id=$(echo "$response" | jq '.id')
          echo "::set-env name=DRAFT_RELEASE_ID::$release_id"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_URL: ${{ steps.create_release.outputs.html_url }}

      - name: Upload executables
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.RELEASE_URL }}/assets?name=myapp-${{ matrix.os }}
          asset_path: myapp/myapp
          asset_name: myapp-${{ matrix.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
