name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build executables
        run: |
          pyinstaller launch.py --name myapp --icon logo.ico
          mv dist myapp

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp
          path: myapp

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: myapp
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Changes in this release:
            - ...
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: myapp/myapp
          asset_name: myapp-${{ matrix.os }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          matrix:
            os: [macOS, Windows, Linux]
            macOS: "macos-latest"
            Windows: "windows-latest"
            Linux: "ubuntu-latest"
